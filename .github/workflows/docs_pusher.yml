# This workflow uses Doxygen to generate HTML API documentation, which is then
# pushed to the project's GitHub Pages
name: Documentation Generator

on:
  push:
    branches: [ main ]

env:
  SKIP_COVERAGE_UPDATE: 1
  BUILD_DIR: ${{ github.workspace }}/build

jobs:
  # Skip jobs based on what files have changed
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      docs_pusher: ${{ steps.filter.outputs.docs_pusher }}
      source_tests_and_examples: ${{ steps.filter.outputs.source_tests_and_examples }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        initial-fetch-depth: 2
        filters: .github/filters.yml

  documentation:
    runs-on: ubuntu-latest
    needs: changes
    if: |
      needs.changes.outputs.docs_pusher == 'true' ||
      needs.changes.outputs.source_tests_and_examples == 'true' ||
      needs.changes.outputs.docs == 'true'

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install lcov ninja-build doxygen graphviz

    - uses: ./.github/workflows/bootstrap_vcpkg
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Generate API documentation and build Unit Tests
      timeout-minutes: 30
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-14 -DDEATH_TEST_PARALLEL=2
        cmake --build . --target documentation arg_router_test_coverage

    - name: Run unit tests to generate coverage data
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test_coverage -l test_suite

    - name: Generate coverage report
      run: |
        cd ${{ github.workspace }}/ci
        ./calculate_test_coverage.sh ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        genhtml arg_router.info --no-function-coverage --title "arg_router Unit Test Code Coverage" --legend --highlight --output-directory gcov_html
        cp -rf ./gcov_html ${GITHUB_WORKSPACE}/docs/doxygen/html/

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/doxygen/html
