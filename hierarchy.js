var hierarchy =
[
    [ "arg_router::add_missing_min_max_policy< MinCount, Policies >", "classarg__router_1_1add__missing__min__max__policy.html", null ],
    [ "arg_router::traits::add_optional< T >", "structarg__router_1_1traits_1_1add__optional.html", null ],
    [ "arg_router::policy::validation::utility::add_to_rule_types< I, T, Rules >", "classarg__router_1_1policy_1_1validation_1_1utility_1_1add__to__rule__types.html", null ],
    [ "arg_router::policy::validation::utility::add_to_rule_types_by_rule< RuleType, T, Rules >", "classarg__router_1_1policy_1_1validation_1_1utility_1_1add__to__rule__types__by__rule.html", null ],
    [ "arg_router::dependency::alias_group_t< Params >", "classarg__router_1_1dependency_1_1alias__group__t.html", null ],
    [ "arg_router::traits::always_false< T >", "structarg__router_1_1traits_1_1always__false.html", null ],
    [ "arg_router::policy::validation::anonymous_mode_must_be_at_end< ModeTypes >", "structarg__router_1_1policy_1_1validation_1_1anonymous__mode__must__be__at__end.html", null ],
    [ "arg_router::tree_node< Params >::any_phases< ValueType, PolicyCheckers >", "classarg__router_1_1tree__node_1_1any__phases.html", null ],
    [ "arg_router::utility::compile_time_string< Cs >::append< T >", "structarg__router_1_1utility_1_1compile__time__string_1_1append.html", null ],
    [ "arg_router::traits::arg_extractor< T >", "structarg__router_1_1traits_1_1arg__extractor.html", null ],
    [ "arg_router::policy::validation::at_least_one_of_policies< Policies >", "structarg__router_1_1policy_1_1validation_1_1at__least__one__of__policies.html", null ],
    [ "arg_router::policy::validation::child_must_have_policy< Policy >", "structarg__router_1_1policy_1_1validation_1_1child__must__have__policy.html", null ],
    [ "arg_router::policy::validation::child_must_not_have_policy< Policy >", "structarg__router_1_1policy_1_1validation_1_1child__must__not__have__policy.html", null ],
    [ "arg_router::policy::help_formatter_component::colour_line_formatter< Indent >", "classarg__router_1_1policy_1_1help__formatter__component_1_1colour__line__formatter.html", null ],
    [ "arg_router::utility::compile_time_optional< T >", "classarg__router_1_1utility_1_1compile__time__optional.html", null ],
    [ "arg_router::utility::compile_time_string< Cs >", "classarg__router_1_1utility_1_1compile__time__string.html", null ],
    [ "arg_router::utility::convert_integral_to_cts< Value >", "structarg__router_1_1utility_1_1convert__integral__to__cts.html", null ],
    [ "arg_router::utility::convert_to_cts< T >", "structarg__router_1_1utility_1_1convert__to__cts.html", null ],
    [ "arg_router::algorithm::count_despecialised< T, Tuple >", "classarg__router_1_1algorithm_1_1count__despecialised.html", null ],
    [ "arg_router::algorithm::count_specialisation< T, Tuple >", "classarg__router_1_1algorithm_1_1count__specialisation.html", null ],
    [ "arg_router::utility::create_sequence_cts< N, C >", "classarg__router_1_1utility_1_1create__sequence__cts.html", null ],
    [ "arg_router::policy::custom_parser< T >", "classarg__router_1_1policy_1_1custom__parser.html", null ],
    [ "arg_router::policy::help_formatter_component::default_addendum_formatter", "classarg__router_1_1policy_1_1help__formatter__component_1_1default__addendum__formatter.html", null ],
    [ "arg_router::default_error_code_translations", "structarg__router_1_1default__error__code__translations.html", null ],
    [ "arg_router::policy::default_help_formatter_t< Indent, DescColumnOffset, LineFormatter, PreambleFormatter, AddendumFormatter >", "classarg__router_1_1policy_1_1default__help__formatter__t.html", null ],
    [ "arg_router::tree_node< Params >::default_leaf_help_data_type< Flatten >", "classarg__router_1_1tree__node_1_1default__leaf__help__data__type.html", null ],
    [ "arg_router::policy::help_formatter_component::default_line_formatter< Indent >", "classarg__router_1_1policy_1_1help__formatter__component_1_1default__line__formatter.html", null ],
    [ "arg_router::policy::help_formatter_component::default_preamble_formatter", "classarg__router_1_1policy_1_1help__formatter__component_1_1default__preamble__formatter.html", null ],
    [ "arg_router::policy::default_value< T >", "classarg__router_1_1policy_1_1default__value.html", null ],
    [ "arg_router::policy::dependent_t< DependsPolicies >", "classarg__router_1_1policy_1_1dependent__t.html", null ],
    [ "arg_router::policy::description_t< S >", "classarg__router_1_1policy_1_1description__t.html", null ],
    [ "arg_router::policy::validation::common_rules::despecialised_any_of_rule< T >", "structarg__router_1_1policy_1_1validation_1_1common__rules_1_1despecialised__any__of__rule.html", null ],
    [ "arg_router::policy::validation::despecialised_unique_in_owner", "structarg__router_1_1policy_1_1validation_1_1despecialised__unique__in__owner.html", null ],
    [ "arg_router::policy::display_name_t< S >", "classarg__router_1_1policy_1_1display__name__t.html", null ],
    [ "arg_router::utility::dynamic_string_view", "classarg__router_1_1utility_1_1dynamic__string__view.html", null ],
    [ "arg_router::parsing::dynamic_token_adapter", "classarg__router_1_1parsing_1_1dynamic__token__adapter.html", null ],
    [ "arg_router::policy::error_name_t< S >", "classarg__router_1_1policy_1_1error__name__t.html", null ],
    [ "std::exception", null, [
      [ "arg_router::multi_lang_exception", "classarg__router_1_1multi__lang__exception.html", null ],
      [ "arg_router::parse_exception", "classarg__router_1_1parse__exception.html", null ]
    ] ],
    [ "arg_router::utility::exception_formatter< S >", "classarg__router_1_1utility_1_1exception__formatter.html", null ],
    [ "arg_router::algorithm::find_specialisation< T, Tuple >", "classarg__router_1_1algorithm_1_1find__specialisation.html", null ],
    [ "arg_router::utility::string_to_policy::first_string_mapper< Policy >", "classarg__router_1_1utility_1_1string__to__policy_1_1first__string__mapper.html", null ],
    [ "arg_router::utility::string_to_policy::first_text_mapper< Policy >", "classarg__router_1_1utility_1_1string__to__policy_1_1first__text__mapper.html", null ],
    [ "arg_router::policy::flatten_help_t< typename >", "structarg__router_1_1policy_1_1flatten__help__t.html", null ],
    [ "arg_router::traits::has_description_method< T >", "structarg__router_1_1traits_1_1has__description__method.html", null ],
    [ "arg_router::traits::has_display_name_method< T >", "structarg__router_1_1traits_1_1has__display__name__method.html", null ],
    [ "arg_router::traits::has_error_code_translations_type< T >", "structarg__router_1_1traits_1_1has__error__code__translations__type.html", null ],
    [ "arg_router::traits::has_error_name_method< T >", "structarg__router_1_1traits_1_1has__error__name__method.html", null ],
    [ "arg_router::traits::has_generate_help_method< T >", "structarg__router_1_1traits_1_1has__generate__help__method.html", null ],
    [ "arg_router::traits::has_generate_runtime_help_data_method< T >", "structarg__router_1_1traits_1_1has__generate__runtime__help__data__method.html", null ],
    [ "arg_router::traits::has_help_data_type< T >", "structarg__router_1_1traits_1_1has__help__data__type.html", null ],
    [ "arg_router::traits::has_long_name_method< T >", "structarg__router_1_1traits_1_1has__long__name__method.html", null ],
    [ "arg_router::traits::has_maximum_count_method< T >", "structarg__router_1_1traits_1_1has__maximum__count__method.html", null ],
    [ "arg_router::traits::has_maximum_value_method< T >", "structarg__router_1_1traits_1_1has__maximum__value__method.html", null ],
    [ "arg_router::traits::has_minimum_count_method< T >", "structarg__router_1_1traits_1_1has__minimum__count__method.html", null ],
    [ "arg_router::traits::has_minimum_value_method< T >", "structarg__router_1_1traits_1_1has__minimum__value__method.html", null ],
    [ "arg_router::policy::has_missing_phase_method< T, ValueType >", "structarg__router_1_1policy_1_1has__missing__phase__method.html", null ],
    [ "arg_router::policy::has_multi_stage_value< T >", "structarg__router_1_1policy_1_1has__multi__stage__value.html", null ],
    [ "arg_router::traits::has_none_name_method< T >", "structarg__router_1_1traits_1_1has__none__name__method.html", null ],
    [ "arg_router::traits::has_parse_method< T >", "structarg__router_1_1traits_1_1has__parse__method.html", null ],
    [ "arg_router::policy::has_parse_phase_method< T, ValueType >", "structarg__router_1_1policy_1_1has__parse__phase__method.html", null ],
    [ "arg_router::policy::has_pre_parse_phase_method< T >", "structarg__router_1_1policy_1_1has__pre__parse__phase__method.html", null ],
    [ "arg_router::policy::has_priority< T >", "structarg__router_1_1policy_1_1has__priority.html", null ],
    [ "arg_router::traits::has_push_back_method< T >", "structarg__router_1_1traits_1_1has__push__back__method.html", null ],
    [ "arg_router::policy::has_routing_phase_method< T >", "structarg__router_1_1policy_1_1has__routing__phase__method.html", null ],
    [ "arg_router::traits::has_runtime_children_method< T >", "classarg__router_1_1traits_1_1has__runtime__children__method.html", null ],
    [ "arg_router::traits::has_runtime_enabled_method< T >", "structarg__router_1_1traits_1_1has__runtime__enabled__method.html", null ],
    [ "arg_router::traits::has_runtime_generate_help_method< T >", "structarg__router_1_1traits_1_1has__runtime__generate__help__method.html", null ],
    [ "arg_router::traits::has_short_name_method< T >", "structarg__router_1_1traits_1_1has__short__name__method.html", null ],
    [ "arg_router::algorithm::has_specialisation< T, Tuple >", "structarg__router_1_1algorithm_1_1has__specialisation.html", null ],
    [ "arg_router::traits::has_token_end_marker_method< T >", "structarg__router_1_1traits_1_1has__token__end__marker__method.html", null ],
    [ "arg_router::traits::has_translate_exception_method< T >", "structarg__router_1_1traits_1_1has__translate__exception__method.html", null ],
    [ "arg_router::policy::has_validation_phase_method< T, ValueType >", "structarg__router_1_1policy_1_1has__validation__phase__method.html", null ],
    [ "arg_router::traits::has_value_separator_method< T >", "structarg__router_1_1traits_1_1has__value__separator__method.html", null ],
    [ "arg_router::traits::has_value_type< T >", "structarg__router_1_1traits_1_1has__value__type.html", null ],
    [ "arg_router::dependency::alias_group_t< Params >::help_data_type< Flatten >", "classarg__router_1_1dependency_1_1alias__group__t_1_1help__data__type.html", null ],
    [ "arg_router::dependency::one_of_t< Params >::help_data_type< Flatten >", "classarg__router_1_1dependency_1_1one__of__t_1_1help__data__type.html", null ],
    [ "arg_router::forwarding_arg_t< Policies >::help_data_type< Flatten >", "classarg__router_1_1forwarding__arg__t_1_1help__data__type.html", null ],
    [ "arg_router::mode_t< Params >::help_data_type< Flatten >", "classarg__router_1_1mode__t_1_1help__data__type.html", null ],
    [ "arg_router::multi_arg_t< T, Policies >::help_data_type< Flatten >", "classarg__router_1_1multi__arg__t_1_1help__data__type.html", null ],
    [ "arg_router::positional_arg_t< T, Policies >::help_data_type< Flatten >", "classarg__router_1_1positional__arg__t_1_1help__data__type.html", null ],
    [ "arg_router::root_t< Params >::help_data_type< Flatten >", "classarg__router_1_1root__t_1_1help__data__type.html", null ],
    [ "arg_router::help_t< Policies >", "classarg__router_1_1help__t.html", null ],
    [ "arg_router::policy::validation::utility::insert_rule< I, Rule, Rules >", "structarg__router_1_1policy_1_1validation_1_1utility_1_1insert__rule.html", null ],
    [ "arg_router::policy::is_all_policies< Tuple >", "structarg__router_1_1policy_1_1is__all__policies.html", null ],
    [ "arg_router::traits::is_compile_time_string_like< T >", "structarg__router_1_1traits_1_1is__compile__time__string__like.html", null ],
    [ "arg_router::policy::is_policy< T, Args >", "structarg__router_1_1policy_1_1is__policy.html", null ],
    [ "arg_router::traits::is_same_when_despecialised< T, U, Args >", "structarg__router_1_1traits_1_1is__same__when__despecialised.html", null ],
    [ "arg_router::traits::is_specialisation< T >", "structarg__router_1_1traits_1_1is__specialisation.html", null ],
    [ "arg_router::traits::is_specialisation_of< T, U >", "structarg__router_1_1traits_1_1is__specialisation__of.html", null ],
    [ "arg_router::traits::is_specialisation_of< U, T >", "structarg__router_1_1traits_1_1is__specialisation__of.html", null ],
    [ "arg_router::is_tree_node< T >", "structarg__router_1_1is__tree__node.html", null ],
    [ "arg_router::traits::is_tuple_like< T, typename >", "structarg__router_1_1traits_1_1is__tuple__like.html", null ],
    [ "arg_router::parsing::dynamic_token_adapter::iterator", "classarg__router_1_1parsing_1_1dynamic__token__adapter_1_1iterator.html", null ],
    [ "arg_router::utility::utf8::code_point::iterator", "classarg__router_1_1utility_1_1utf8_1_1code__point_1_1iterator.html", null ],
    [ "arg_router::utility::utf8::iterator", "classarg__router_1_1utility_1_1utf8_1_1iterator.html", null ],
    [ "arg_router::utility::utf8::line_iterator", "classarg__router_1_1utility_1_1utf8_1_1line__iterator.html", null ],
    [ "arg_router::list< Children >", "classarg__router_1_1list.html", null ],
    [ "arg_router::policy::validation::list_like_nodes_must_have_fixed_count_if_not_at_end", "structarg__router_1_1policy_1_1validation_1_1list__like__nodes__must__have__fixed__count__if__not__at__end.html", null ],
    [ "arg_router::policy::long_name_t< S >", "classarg__router_1_1policy_1_1long__name__t.html", null ],
    [ "arg_router::policy::min_max_count_t< MinType, MaxType >", "classarg__router_1_1policy_1_1min__max__count__t.html", null ],
    [ "arg_router::policy::min_max_value_ct< MinType, MaxType >", "classarg__router_1_1policy_1_1min__max__value__ct.html", null ],
    [ "arg_router::policy::min_max_value_t< ValueType, LessThanCompare >", "classarg__router_1_1policy_1_1min__max__value__t.html", null ],
    [ "arg_router::mode_t< Params >", "classarg__router_1_1mode__t.html", null ],
    [ "arg_router::multi_arg_base_t< T, MinCount, Policies >", "classarg__router_1_1multi__arg__base__t.html", null ],
    [ "arg_router::multi_arg_base_t< T, 0, Policies... >", "classarg__router_1_1multi__arg__base__t.html", [
      [ "arg_router::positional_arg_t< T, Policies >", "classarg__router_1_1positional__arg__t.html", null ]
    ] ],
    [ "arg_router::multi_arg_base_t< T, 1, policy::min_max_count_t< traits::integral_constant< std::size_t{1}>, traits::integral_constant< std::size_t{1}> >, std::decay_t< Policies >... >", "classarg__router_1_1multi__arg__base__t.html", [
      [ "arg_router::arg_t< T, Policies >", "classarg__router_1_1arg__t.html", null ]
    ] ],
    [ "arg_router::multi_arg_base_t< T, 1, std::decay_t< Policies >... >", "classarg__router_1_1multi__arg__base__t.html", [
      [ "arg_router::multi_arg_t< T, Policies >", "classarg__router_1_1multi__arg__t.html", null ]
    ] ],
    [ "arg_router::multi_arg_base_t< vector< std::string_view >, 0, std::decay_t< Policies >... >", "classarg__router_1_1multi__arg__base__t.html", [
      [ "arg_router::forwarding_arg_t< Policies >", "classarg__router_1_1forwarding__arg__t.html", null ]
    ] ],
    [ "arg_router::policy::multi_stage_value< ResultType, ValueType >", "classarg__router_1_1policy_1_1multi__stage__value.html", null ],
    [ "arg_router::policy::validation::must_have_at_least_min_count_of_1_if_required", "structarg__router_1_1policy_1_1validation_1_1must__have__at__least__min__count__of__1__if__required.html", null ],
    [ "arg_router::policy::validation::must_have_policies< Policies >", "structarg__router_1_1policy_1_1validation_1_1must__have__policies.html", null ],
    [ "arg_router::policy::validation::must_not_have_policies< Policies >", "structarg__router_1_1policy_1_1validation_1_1must__not__have__policies.html", null ],
    [ "arg_router::policy::nearest_mode_like< ParentsTuple >", "classarg__router_1_1policy_1_1nearest__mode__like.html", null ],
    [ "arg_router::policy::no_result_value< typename >", "structarg__router_1_1policy_1_1no__result__value.html", [
      [ "arg_router::policy::alias_t< AliasedPolicies >", "classarg__router_1_1policy_1_1alias__t.html", null ]
    ] ],
    [ "arg_router::policy::validation::node_types_must_be_at_end< NodeTypes >", "structarg__router_1_1policy_1_1validation_1_1node__types__must__be__at__end.html", null ],
    [ "arg_router::policy::none_name_t< S >", "classarg__router_1_1policy_1_1none__name__t.html", null ],
    [ "arg_router::dependency::one_of_t< Params >", "classarg__router_1_1dependency_1_1one__of__t.html", null ],
    [ "arg_router::policy::validation::parent_index_pair_type< Index, ParentType >", "structarg__router_1_1policy_1_1validation_1_1parent__index__pair__type.html", null ],
    [ "arg_router::policy::validation::parent_types< ParentIndexTypes >", "structarg__router_1_1policy_1_1validation_1_1parent__types.html", null ],
    [ "arg_router::parsing::parse_target", "classarg__router_1_1parsing_1_1parse__target.html", null ],
    [ "arg_router::parser< T, Enable >", "structarg__router_1_1parser.html", null ],
    [ "arg_router::tree_node< Params >::phase_finder< PolicyChecker, Args >", "structarg__router_1_1tree__node_1_1phase__finder.html", null ],
    [ "arg_router::policy::validation::policy_parent_must_not_have_policy< Policy >", "structarg__router_1_1policy_1_1validation_1_1policy__parent__must__not__have__policy.html", null ],
    [ "arg_router::policy::validation::policy_unique_from_owner_parent_to_mode_or_root< ModeTypes >", "structarg__router_1_1policy_1_1validation_1_1policy__unique__from__owner__parent__to__mode__or__root.html", null ],
    [ "arg_router::parsing::pre_parse_data< Validator, bool >", "classarg__router_1_1parsing_1_1pre__parse__data.html", null ],
    [ "arg_router::parsing::pre_parse_data_base< Validator, HasTarget >", "classarg__router_1_1parsing_1_1pre__parse__data__base.html", null ],
    [ "arg_router::parsing::pre_parse_data_base< Validator, false >", "classarg__router_1_1parsing_1_1pre__parse__data__base.html", [
      [ "arg_router::parsing::pre_parse_data< Validator, false >", "classarg__router_1_1parsing_1_1pre__parse__data_3_01Validator_00_01false_01_4.html", null ]
    ] ],
    [ "arg_router::parsing::pre_parse_data_base< Validator, true >", "classarg__router_1_1parsing_1_1pre__parse__data__base.html", [
      [ "arg_router::parsing::pre_parse_data< Validator, true >", "classarg__router_1_1parsing_1_1pre__parse__data_3_01Validator_00_01true_01_4.html", null ]
    ] ],
    [ "arg_router::policy::program_addendum_t< S >", "classarg__router_1_1policy_1_1program__addendum__t.html", null ],
    [ "arg_router::policy::program_intro_t< S >", "classarg__router_1_1policy_1_1program__intro__t.html", null ],
    [ "arg_router::policy::program_name_t< S >", "classarg__router_1_1policy_1_1program__name__t.html", null ],
    [ "arg_router::policy::program_version_t< S >", "classarg__router_1_1policy_1_1program__version__t.html", null ],
    [ "arg_router::utility::utf8::code_point::range", "classarg__router_1_1utility_1_1utf8_1_1code__point_1_1range.html", null ],
    [ "arg_router::utility::utf8::code_point::iterator::range_t", "classarg__router_1_1utility_1_1utf8_1_1code__point_1_1iterator_1_1range__t.html", null ],
    [ "arg_router::utility::utf8::iterator::range_t", "classarg__router_1_1utility_1_1utf8_1_1iterator_1_1range__t.html", null ],
    [ "arg_router::policy::validation::utility::remove_rule< I, Rules >", "structarg__router_1_1policy_1_1validation_1_1utility_1_1remove__rule.html", null ],
    [ "arg_router::policy::validation::utility::remove_rule_by_type< RuleType, Rules >", "classarg__router_1_1policy_1_1validation_1_1utility_1_1remove__rule__by__type.html", null ],
    [ "arg_router::policy::required_t< typename >", "classarg__router_1_1policy_1_1required__t.html", null ],
    [ "arg_router::utility::result< ResultType, ExceptionType >", "classarg__router_1_1utility_1_1result.html", null ],
    [ "arg_router::multi_lang::root_t< RootFactory, DefaultLanguageID, SupportedLanguageIDs >", "classarg__router_1_1multi__lang_1_1root__t.html", null ],
    [ "arg_router::root_t< Params >", "classarg__router_1_1root__t.html", null ],
    [ "arg_router::multi_lang::root_wrapper_t< Fn, SupportedISOLanguageCodes >", "classarg__router_1_1multi__lang_1_1root__wrapper__t.html", null ],
    [ "arg_router::policy::router< Fn >", "classarg__router_1_1policy_1_1router.html", null ],
    [ "arg_router::policy::runtime_enable< T >", "classarg__router_1_1policy_1_1runtime__enable.html", null ],
    [ "arg_router::policy::runtime_enable< T >", "classarg__router_1_1policy_1_1runtime__enable.html", null ],
    [ "arg_router::runtime_help_data", "structarg__router_1_1runtime__help__data.html", null ],
    [ "arg_router::utility::string_to_policy::second_string_mapper< Policy >", "classarg__router_1_1utility_1_1string__to__policy_1_1second__string__mapper.html", null ],
    [ "arg_router::utility::string_to_policy::second_text_mapper< Policy >", "classarg__router_1_1utility_1_1string__to__policy_1_1second__text__mapper.html", null ],
    [ "arg_router::policy::short_form_expander_t< typename >", "classarg__router_1_1policy_1_1short__form__expander__t.html", null ],
    [ "arg_router::policy::short_name_t< S >", "classarg__router_1_1policy_1_1short__name__t.html", null ],
    [ "arg_router::policy::validation::single_anonymous_mode< ModeTypes >", "structarg__router_1_1policy_1_1validation_1_1single__anonymous__mode.html", null ],
    [ "arg_router::utility::string_to_policy::single_char_mapper< Policy >", "classarg__router_1_1utility_1_1string__to__policy_1_1single__char__mapper.html", null ],
    [ "arg_router::traits::supports_static_cast_conversion< From, To >", "structarg__router_1_1traits_1_1supports__static__cast__conversion.html", null ],
    [ "arg_router::policy::token_end_marker_t< S >", "classarg__router_1_1policy_1_1token__end__marker__t.html", null ],
    [ "arg_router::parsing::token_type", "structarg__router_1_1parsing_1_1token__type.html", null ],
    [ "arg_router::multi_lang::translation< LanguageID >", "classarg__router_1_1multi__lang_1_1translation.html", null ],
    [ "arg_router::utility::tree_type_recursor_collector< Visitor, Root >", "structarg__router_1_1utility_1_1tree__type__recursor__collector.html", null ],
    [ "arg_router::traits::underlying_type< T, Enable >", "structarg__router_1_1traits_1_1underlying__type.html", null ],
    [ "arg_router::traits::unpack_and_derive< T >", "classarg__router_1_1traits_1_1unpack__and__derive.html", null ],
    [ "arg_router::traits::unpack_and_derive< boost::mp11::mp_filter< policy::is_policy, std::tuple< std::decay_t< Params >... > > >", "classarg__router_1_1traits_1_1unpack__and__derive.html", [
      [ "arg_router::tree_node< policy::multi_stage_value< T, bool >, policy::min_max_count_t< traits::integral_constant< std::size_t{0}>, traits::integral_constant< std::size_t{0}> >, std::decay_t< Policies >... >", "classarg__router_1_1tree__node.html", [
        [ "arg_router::counting_flag_t< T, Policies >", "classarg__router_1_1counting__flag__t.html", null ]
      ] ],
      [ "arg_router::tree_node< policy::default_value< bool >, policy::min_max_count_t< traits::integral_constant< std::size_t{0}>, traits::integral_constant< std::size_t{0}> >, std::decay_t< Policies >... >", "classarg__router_1_1tree__node.html", [
        [ "arg_router::flag_t< Policies >", "classarg__router_1_1flag__t.html", null ]
      ] ],
      [ "arg_router::tree_node< Params >", "classarg__router_1_1tree__node.html", null ]
    ] ],
    [ "arg_router::utility::unsafe_any_t< SmallObjectOptimisationSize >", "classarg__router_1_1utility_1_1unsafe__any__t.html", null ],
    [ "arg_router::algorithm::unzip< T >", "structarg__router_1_1algorithm_1_1unzip.html", null ],
    [ "arg_router::policy::validation::utility::update_rule< I, Rule, Rules >", "structarg__router_1_1policy_1_1validation_1_1utility_1_1update__rule.html", null ],
    [ "arg_router::policy::validation::utility::update_rule_by_type< RuleType, Rule, Rules >", "classarg__router_1_1policy_1_1validation_1_1utility_1_1update__rule__by__type.html", null ],
    [ "arg_router::policy::validation::validator< Rules >", "classarg__router_1_1policy_1_1validation_1_1validator.html", null ],
    [ "arg_router::policy::value_separator_t< S >", "classarg__router_1_1policy_1_1value__separator__t.html", null ],
    [ "arg_router::algorithm::zip< First, Second >", "classarg__router_1_1algorithm_1_1zip.html", null ]
];